{"version":3,"sources":["components/HomePage/HomePage.tsx","api.ts","components/PersonRow/PersonRow.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","components/NavigationList/NavigationList.tsx","App.tsx","index.tsx"],"names":["HomePage","className","getData","a","fetch","then","response","json","peopleList","map","person","index","id","name","sex","born","died","fatherName","motherName","slug","age","century","Math","ceil","PersonRow","searchTarget","history","useHistory","tabId","useParams","cn","onClick","push","pathname","search","toUpperCase","father","mother","PeopleTable","people","location","useLocation","searchURLParameters","URLSearchParams","peopleWithParents","find","parent","useState","sortedPeople","setSortedPeople","setSearchTarget","query","setQuery","useEffect","visiblePeople","useMemo","filter","toLowerCase","includes","sort","b","localeCompare","updateQuery","useCallback","debounce","value","type","placeholder","onChange","target","trimedTarget","trim","set","toString","handleChange","tableHead","key","lowerCaseTarget","get","reverse","handleClickForSorting","setPeople","list","NavigationList","to","exact","App","path","component","PeoplePage","from","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.34d6a05d.chunk.js","sourcesContent":["import React from 'react';\n\nimport './HomePage.css';\n\nconst HomePage = () => {\n  return (\n    <h1 className=\"header\">\n      Home\n    </h1>\n  );\n};\n\nexport default HomePage;\n","import { PersonTable } from './interfaces/interfaces';\n\nexport const getListOfPeople = <T>(): Promise<T[]> => (\n  fetch('https://mate-academy.github.io/react_people-table/api/people.json')\n    .then(response => response.json())\n);\n\nexport const getData = async () => {\n  const peopleList = await getListOfPeople<PersonTable>();\n\n  return peopleList.map((person: PersonTable, index: number) => ({\n    id: index + 1,\n    name: person.name,\n    sex: person.sex,\n    born: person.born,\n    died: person.died,\n    fatherName: person.fatherName ? person.fatherName : 'none',\n    motherName: person.motherName ? person.motherName : 'none',\n    slug: person.slug,\n    age: person.died - person.born,\n    century: Math.ceil(person.died / 100),\n  }));\n};\n","import React from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport cn from 'classnames';\n\n\ntype Props = {\n  person: Person;\n  searchTarget: string;\n};\n\ninterface Person {\n  id: number;\n  name: string;\n  sex: string;\n  fatherName: string;\n  motherName: string;\n  father: object | string;\n  mother: object | string;\n  born: number;\n  died: number;\n  slug: string;\n  age: number;\n  century: number;\n}\n\nconst PersonRow = ({ person, searchTarget }: Props) => {\n  const history = useHistory();\n  const { tabId } = useParams();\n\n  const handleChangePathParam = (slug: string) => {\n    history.push({\n      pathname: `/people/${slug}`,\n      search: searchTarget,\n    });\n  };\n\n  return (\n    <tr\n      className={cn('Person', {\n        'Person-active': tabId === person.slug,\n      })}\n      onClick={() => handleChangePathParam(person.slug)}\n    >\n      <td className={person.sex === 'm' ? 'male' : 'female'}>{person.name}</td>\n      <td>{person.sex.toUpperCase()}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td className={person.father === 'none' ? 'none' : 'male'}>\n        {person.fatherName}\n      </td>\n      <td className={person.mother === 'none' ? 'none' : 'female'}>\n        {person.motherName}\n      </td>\n      <td>{person.age}</td>\n      <td>{person.century}</td>\n    </tr>\n  );\n};\n\nexport default PersonRow;\n","import React, {\n  useState,\n  useEffect,\n  useMemo,\n  useCallback,\n} from 'react';\nimport debounce from 'lodash/debounce';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport { PersonTable } from '../../interfaces/interfaces';\nimport PersonRow from '../PersonRow/PersonRow';\n\ninterface PersonArray {\n  id: number;\n  name: string;\n  sex: string;\n  fatherName: string;\n  motherName: string;\n  born: number;\n  died: number;\n  slug: string;\n  age: number;\n  century: number;\n}\n\ntype Props = {\n  people: PersonArray[];\n};\n\nconst PeopleTable: React.FC<Props> = ({ people }) => {\n  const location = useLocation();\n  const searchURLParameters = new URLSearchParams(location.search);\n  const history = useHistory();\n  const tableHeader = ['Name', 'Sex', 'Born', 'Died', 'Father', 'Mother', 'Age', 'Century'];\n  const peopleWithParents: PersonTable[] = people.map(person => ({\n    ...person,\n    father: people.find((parent) => parent.name === person.fatherName) || 'none',\n    mother: people.find((parent) => parent.name === person.motherName) || 'none',\n  }));\n  const [sortedPeople, setSortedPeople] = useState<PersonTable[]>([]);\n  const [searchTarget, setSearchTarget] = useState<string>('');\n  const [query, setQuery] = useState<string>('');\n\n  useEffect(() => {\n    setSortedPeople([...peopleWithParents]);\n  }, [people]);\n\n  const visiblePeople = useMemo(() => {\n    return sortedPeople.filter(person => (\n      (person.name + person.father + person.mother)\n        .toLowerCase()\n        .includes(query.toLowerCase())));\n  }, [sortedPeople, query]);\n\n  useMemo(() => {\n    const father = 'fatherName';\n    const mother = 'motherName';\n\n    switch (searchTarget) {\n      case 'died':\n      case 'born':\n      case 'age':\n      case 'century':\n        visiblePeople.sort((a, b) => (a[searchTarget] - b[searchTarget]));\n        break;\n      case 'name':\n      case 'sex':\n        visiblePeople.sort((a, b) => (a[searchTarget].localeCompare(b[searchTarget])));\n        break;\n      case 'father':\n        visiblePeople.sort((a, b) => (a[father].localeCompare(b[father])));\n        break;\n      case 'mother':\n        visiblePeople.sort((a, b) => (a[mother].localeCompare(b[mother])));\n        break;\n      default:\n        break;\n    }\n  }, [visiblePeople, searchTarget]);\n\n  const handleClickForSorting = ((target: string) => {\n    const lowerCaseTarget = target.toLowerCase();\n\n    if (searchURLParameters.get('sortBy') === lowerCaseTarget\n      && searchURLParameters.get('sortOrder') === 'asc') {\n      searchURLParameters.set('sortOrder', 'desc');\n      visiblePeople.reverse();\n    } else {\n      searchURLParameters.set('sortOrder', 'asc');\n      visiblePeople.reverse();\n    }\n\n    searchURLParameters.set('sortBy', lowerCaseTarget);\n    setSearchTarget(lowerCaseTarget);\n\n    history.push({\n      search: searchURLParameters.toString(),\n    });\n  });\n\n  const updateQuery = useCallback(\n    debounce((value: string) => {\n      history.push({\n        search: value,\n      });\n    }, 500),\n    [],\n  );\n\n  const handleChange = (target: string) => {\n    const trimedTarget = target.trim();\n\n    setQuery(trimedTarget);\n    searchURLParameters.set('query', trimedTarget);\n    updateQuery(searchURLParameters.toString());\n  };\n\n  return (\n    <>\n      <input\n        type=\"text\"\n        value={query}\n        placeholder=\"Type something to search\"\n        onChange={({ target }) => handleChange(target.value)}\n      />\n      <table className=\"PeopleTable purpleHorizon\">\n        <thead>\n          <tr>\n            {tableHeader.map(tableHead => (\n              <th key={tableHead} onClick={() => handleClickForSorting(tableHead)}>\n                {tableHead}\n                {searchTarget === tableHead.toLowerCase() && '*'}\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {visiblePeople.map(person => (\n            <PersonRow\n              key={person.id}\n              person={person}\n              searchTarget={searchURLParameters.toString()}\n            />\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n};\n\nexport default PeopleTable;\n","import React, { useState, useEffect } from 'react';\n\nimport { getData } from '../../api';\n\nimport PeopleTable from '../PeopleTable/PeopleTable';\n\nimport './PeoplePage.css';\n\ninterface PersonTable {\n  id: number;\n  name: string;\n  sex: string;\n  fatherName: string;\n  motherName: string;\n  born: number;\n  died: number;\n  slug: string;\n  age: number;\n  century: number;\n}\n\nconst HomePage = () => {\n  const [people, setPeople] = useState<PersonTable[]>([]);\n\n\n  useEffect(() => {\n    getData().then((list) => {\n      setPeople(list);\n    });\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"header\">\n        People Page\n      </h1>\n      <PeopleTable people={people} />\n    </>\n  );\n};\n\nexport default HomePage;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport './NavigationList.css';\n\nconst NavigationList = () => {\n  return (\n    <div className=\"nav\">\n      <ul className=\"nav__list\">\n        <li className=\"nav__link\">\n          <NavLink\n            to=\"/\"\n            exact\n          >\n            Home\n          </NavLink>\n        </li>\n        <li className=\"nav__link\">\n          <NavLink\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default NavigationList;\n","import React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\n\nimport './App.css';\n\nimport HomePage from './components/HomePage/HomePage';\nimport PeoplePage from './components/PeoplePage/PeoplePage';\nimport NavigationList from './components/NavigationList/NavigationList';\n\nconst App = () => (\n  <div className=\"App\">\n    <NavigationList />\n    <Switch>\n      <Route path=\"/\" exact component={HomePage} />\n      <Route path=\"/people/:tabId?\" exact component={PeoplePage} />\n      <Redirect from=\"/home\" to=\"/\" />\n      <Route>\n        <h1>\n          Page not found!\n        </h1>\n      </Route>\n    </Switch>\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}